print([[ 
        ,--.                                                                                               
       ,--.'|           ___                                                                     ,-.----.    
   ,--,:  : |  ,--,   ,--.'|_                                                              ,---.\    /  \   
,`--.'`|  ' :,--.'|   |  | :,'   __  ,-.   ,---.           ,--,                           /__./|;   :    \  
|   :  :  | ||  |,    :  : ' : ,' ,'/ /|  '   ,'\        ,'_ /|   .--.--.            ,---.;  ; ||   | .\ :  
:   |   \ | :`--'_  .;__,'  /  '  | |' | /   /   |  .--. |  | :  /  /    '          /___/ \  | |.   : |: |  
|   : '  '; |,' ,'| |  |   |   |  |   ,'.   ; ,. :,'_ /| :  . | |  :  /`./          \   ;  \ ' ||   |  \ :  
'   ' ;.    ;'  | | :__,'| :   '  :  /  '   | |: :|  ' | |  . . |  :  ;_             \   \  \: ||   : .  /  
|   | | \   ||  | :   '  : |__ |  | '   '   | .; :|  | ' |  | |  \  \    `.           ;   \  ' .;   | |  \  
'   : |  ; .''  : |__ |  | '.'|;  : |   |   :    |:  | : ;  ; |   `----.   \           \   \   '|   | ;\  \ 
|   | '`--'  |  | '.'|;  :    ;|  , ;    \   \  / '  :  `--'   \ /  /`--'  /            \   `  ;:   ' | \.' 
'   : |      ;  :    ;|  ,   /  ---'      `----'  :  ,      .-./'--'.     /              :   \ |:   : :-'   
;   |.'      |  ,   /  ---`-'                      `--`----'      `--'---'                '---" |   |.'     
'---'         ---`-'                                                                            `---'  
                                               
credits: Nitro - Fixing and Modernizing Script 
          Sked - Original Script
            
        Thanks for using Nitrous VR!
            ]])

print([[Nitrous VR is a recreation of Sked's fe VR script, It aims to be usable with most functions in a few games
                    Known Good Experiences: Cook in Work at a Pizza Place]])
              
              
              
_G.HeadHat = "MeshPartAccessory"
_G.NitrousHats = false -- dont use this as it doesnt have a function yet, it only uses predetermined hats atm!





local c = game:GetService("Players").LocalPlayer.Character 
-- rcd workaround!!
-- why are you reading this
for i,v in pairs(c:GetDescendants()) do
if v:IsA("Accessory") then
Accessory = v
      Handle = Accessory.Handle
      pcall(function() Handle:FindFirstChildOfClass("Weld"):Destroy() end)
    	local NewWeld = Instance.new("Weld")
    	NewWeld.Name = "AccessoryWeld"
    	NewWeld.Part0 = Handle
    	local Attachment = Handle:FindFirstChildOfClass("Attachment")
    	if Attachment then
    		NewWeld.C0 = Attachment.CFrame
    		NewWeld.C1 = c:FindFirstChild(tostring(Attachment), true).CFrame
    		NewWeld.Part1 = c:FindFirstChild(tostring(Attachment), true).Parent
    	else
    		NewWeld.Part1 = FakeCharacter:FindFirstChild("Head")
    		NewWeld.C1 = CFrame.new(0,char:FindFirstChild("Head").Size.Y / 2,0) * Accessory.AttachmentPoint:Inverse()
    	end
    	Handle.CFrame = NewWeld.Part1.CFrame * NewWeld.C1 * NewWeld.C0:Inverse()
    	NewWeld.Parent = Accessory.Handle

end
end
--funny permadeath!!
local ch = game.Players.LocalPlayer.Character
local prt=Instance.new("Model", workspace)
local z1 =  Instance.new("Part", prt)
z1.Name="Torso"
z1.CanCollide = false
z1.Anchored = true
local z2  =Instance.new("Part", prt)
z2.Name="Head"
z2.Anchored = true
z2.CanCollide = false
local z3 =Instance.new("Humanoid", prt)
z3.Name="Humanoid"
z1.Position = Vector3.new(0,9999,0)
z2.Position = Vector3.new(0,9991,0)
 game.Players.LocalPlayer.Character=prt
 game.Players.LocalPlayer.Character=c
  wait(game.Players.RespawnTime + 0.5)  
c.Torso.Neck:Destroy()

local plr = game:GetService("Players").LocalPlayer
local char = plr.Character
for i,v in pairs(char:GetDescendants()) do
if v:IsA("SpecialMesh") then
if v.MeshId == "rbxassetid://11263221350" and v.TextureId == "http://www.roblox.com/asset/?id=11263219250" then
v.Parent.Parent.Name = "brick arm"
end
end
end
--funny velocity
game:GetService("RunService").Heartbeat:Connect(function(set)
for i,v in pairs(c:GetChildren()) do
	if v:IsA("Accessory") then
		v.Handle.AssemblyLinearVelocity = Vector3.new(0, -32.5, 0)
	end
end
end)

local options = {}

-- OPTIONS:
options.delbody = true
options.headscale = 2 -- how big you are in vr, 1 is default, 3 is recommended for max comfort in vr
options.forcebubblechat = true -- decide if to force bubblechat so you can see peoples messages

options.headhat = _G.HeadHat --name of the accessory which you are using as a head
options.righthandhat = "brick arm" -- name of the accessory which you are using as your right hand
options.lefthandhat = "Unloaded head" -- name of the accessory which you are using as your left hand

options.righthandrotoffset = Vector3.new(90,0,0)
options.lefthandrotoffset = Vector3.new(90,0,0)

--

--local backpack = plr.Backpack

local VR = game:GetService("VRService")
local input = game:GetService("UserInputService")

local cam = workspace.CurrentCamera

cam.CameraType = "Scriptable"

cam.HeadScale = options.headscale

game:GetService("StarterGui"):SetCore("VRLaserPointerMode", 0)
game:GetService("StarterGui"):SetCore("VREnableControllerModels", true)


local function createpart(size, name)
	local Part = Instance.new("Part", char)
	Part.CFrame = char.HumanoidRootPart.CFrame
	Part.Size = size
	Part.Transparency = 1
	Part.CanCollide = false
	Part.Anchored = true
	Part.Name = name
	return Part
end

local moveHandL = createpart(Vector3.new(1,1,2), "moveRH")
local moveHandR = createpart(Vector3.new(1,1,2), "moveLH")
local moveHead = createpart(Vector3.new(1,1,1), "moveH")

local handL
local handR
local head
local R1down = false

for i,v in pairs(char.Humanoid:GetAccessories()) do
	if v:FindFirstChild("Handle") then
		local handle = v.Handle
		
		if v.Name == options.righthandhat and not handR then
			handR = v
		elseif v.Name == options.lefthandhat and not handL then
			handL = v
		elseif v.Name == options.headhat and not head then
workspace[game.Players.LocalPlayer.Name][options.headhat]["Handle"].Transparency = 1
			head = v
		end
	end
end

char.Humanoid.AnimationPlayed:connect(function(anim)
	anim:Stop()
end)

for i,v in pairs(char.Humanoid:GetPlayingAnimationTracks()) do
	v:AdjustSpeed(0)
end

local torso = char:FindFirstChild("Torso") or char:FindFirstChild("UpperTorso")
torso.Anchored = true
char.HumanoidRootPart.Anchored = true

workspace.CurrentCamera.CFrame = CFrame.new(workspace.CurrentCamera.CFrame.Position)

input.UserCFrameChanged:connect(function(part,move)
	if part == Enum.UserCFrame.Head then
		--move(head,cam.CFrame*move)
		moveHead.CFrame = cam.CFrame*(CFrame.new(move.p*(cam.HeadScale-1))*move)
	elseif part == Enum.UserCFrame.LeftHand then
		--move(handL,cam.CFrame*move)
		moveHandL.CFrame = cam.CFrame*(CFrame.new(move.p*(cam.HeadScale-1))*move*CFrame.Angles(math.rad(options.righthandrotoffset.X),math.rad(options.righthandrotoffset.Y),math.rad(options.righthandrotoffset.Z)))
	elseif part == Enum.UserCFrame.RightHand then
		--move(handR,cam.CFrame*move)
		moveHandR.CFrame = cam.CFrame*(CFrame.new(move.p*(cam.HeadScale-1))*move*CFrame.Angles(math.rad(options.righthandrotoffset.X),math.rad(options.righthandrotoffset.Y),math.rad(options.righthandrotoffset.Z)))
	end
end)

local function Align(Part1, Part0, Position, Angle)

    game:GetService("RunService").Heartbeat:Connect(function(set)
        Part1.CFrame = Part0.CFrame * Position * Angle * CFrame.Angles(0,0,-.0005*math.sin(100*tick()))
     
    
    end)
end
local function Align2(Part1, Part0, Position, Angle)

    game:GetService("RunService").Heartbeat:Connect(function(set)
        Part1.CFrame = Part0.CFrame * Position * Angle * CFrame.Angles(0,0,-.0005*math.sin(100*tick()))
     Part1:BreakJoints()
    Part1.Transparency = 0.95
    end)
    end
head.Handle:BreakJoints()
handR.Handle:BreakJoints()
handL.Handle:BreakJoints()


Align(head.Handle,moveHead,CFrame.new(0,0,0),  CFrame.Angles(math.rad(0),math.rad(0),math.rad(180)))
if _G.NitrousHats == true then
Align2(c.YellowROBLOXVisor.Handle,moveHead,CFrame.new(-0, 0.4, -0.2), CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)))
Align2(c.Eyepatch.Handle,moveHead,CFrame.new(0, 0.15, -0.014), CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)))
Align2(c["Puffer Vest"].Handle,moveHead,CFrame.new(0, -1.45, 0), CFrame.Angles(math.rad(0),math.rad(0),math.rad(0)))
end
Align(handR.Handle,moveHandR,CFrame.new(0,0,0),CFrame.Angles(math.rad(90),math.rad(-90),math.rad(0)))
Align(handL.Handle,moveHandL,CFrame.new(0,0,0), CFrame.Angles(math.rad(90),math.rad(90),math.rad(0)))

input.InputChanged:connect(function(key)
	if key.KeyCode == Enum.KeyCode.ButtonR1 then
		if key.Position.Z > 0.9 then
			R1down = true
		else
			R1down = false
		end
	end
end)

input.InputBegan:connect(function(key)
	if key.KeyCode == Enum.KeyCode.ButtonR1 then
		R1down = true
	end
end)

input.InputEnded:connect(function(key)
	if key.KeyCode == Enum.KeyCode.ButtonR1 then
		R1down = false
	end
end)

game:GetService("RunService").RenderStepped:connect(function()
	if R1down then
		cam.CFrame = cam.CFrame:Lerp(cam.CoordinateFrame + (moveHandR.CFrame*CFrame.Angles(-math.rad(options.righthandrotoffset.X),-math.rad(options.righthandrotoffset.Y),math.rad(180-options.righthandrotoffset.X))).LookVector * cam.HeadScale/2, 0.5)
	end
end)

local function bubble(plr,msg)
	game:GetService("Chat"):Chat(plr.Character.Head,msg,Enum.ChatColor.White)
end
if options.delbody == true then
    c["Head"]:Destroy()
c["Left Leg"]:Destroy()
c["Left Arm"]:Destroy()
c["Right Leg"]:Destroy()
c["Right Arm"]:Destroy()
c["Torso"]:Destroy()
c["HumanoidRootPart"]:Destroy()
    end


